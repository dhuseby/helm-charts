replicaCount: 1

image:
  repository: emby/embyserver
  pullPolicy: IfNotPresent
  tag: latest

service:
  type: ClusterIP
  port: 8096

serviceAccount:
  create: false
  automount: false
  annotations: {}
  name: ""

# enable these in your values to claim existing persistent volume claims
persistence:
  config:
    enabled: false
    # existingClaim: emby-config

  media:
    enabled: false
    # existingClaim: emby-media

# this chart only supports mounts for the config dir and the root directory with all media in it
volumeMounts: []
  # - name: emby-config
  #   mountPath: /config
  # - name: emby-media
  #   mountPath: /srv

# customize these in your values to tell emby which UID/GID/GIDLIST to switch to when it drops root privileges
env: {}
  # UID: "1000"
  # GID: "1000"
  # GIDLIST: "1000"

# enable this in your own values to create an ingress during deployment
ingress:
  enabled: false
  #className: nginx
  #annotations: {}
  # cert-manager.io/cluster-issuer: "letsencrypt-tls"
  #hosts:
  #  - host: example.local
  #    paths:
  #      - path: /
  #        pathType: Prefix
  # tls:
  # - secretName: emby-tls
  #   hosts:
  #   - "example.local"

# this tells the container to run the initial process as root. emby will drop privileges to the UID/GID values on startup
securityContext:
  runAsUser: 0
  runAsGroup: 0
  fsGroup: 0
  allowPrivilegeEscalation: false

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
